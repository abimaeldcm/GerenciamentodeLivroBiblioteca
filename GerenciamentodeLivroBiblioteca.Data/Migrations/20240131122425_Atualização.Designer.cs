// <auto-generated />
using System;
using GerenciamentodeLivroBiblioteca.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GerenciamentodeLivroBiblioteca.Infra.Data.Migrations
{
    [DbContext(typeof(ApplicationDataBase))]
    [Migration("20240131122425_Atualização")]
    partial class Atualização
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GerenciamentodeLivroBiblioteca.Domain.Entites.Emprestimo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DataEmprestimo")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdLivro")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdLivro");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Emprestimos");
                });

            modelBuilder.Entity("GerenciamentodeLivroBiblioteca.Domain.Entites.Livro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AnoDePublicacao")
                        .HasColumnType("int");

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Disponivel")
                        .HasColumnType("bit");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Livros");
                });

            modelBuilder.Entity("GerenciamentodeLivroBiblioteca.Domain.Entites.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("LivroId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("LivroId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("GerenciamentodeLivroBiblioteca.Domain.Entites.Emprestimo", b =>
                {
                    b.HasOne("GerenciamentodeLivroBiblioteca.Domain.Entites.Livro", "LivroNav")
                        .WithMany()
                        .HasForeignKey("IdLivro")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GerenciamentodeLivroBiblioteca.Domain.Entites.Usuario", "UsuarioNav")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LivroNav");

                    b.Navigation("UsuarioNav");
                });

            modelBuilder.Entity("GerenciamentodeLivroBiblioteca.Domain.Entites.Usuario", b =>
                {
                    b.HasOne("GerenciamentodeLivroBiblioteca.Domain.Entites.Livro", null)
                        .WithMany("UsuariosLivro")
                        .HasForeignKey("LivroId");
                });

            modelBuilder.Entity("GerenciamentodeLivroBiblioteca.Domain.Entites.Livro", b =>
                {
                    b.Navigation("UsuariosLivro");
                });
#pragma warning restore 612, 618
        }
    }
}
